openapi: 3.0.0
info:
  title: API CRUD Usuários
  version: 1.0.0
  description: API completa para gerenciamento de usuários

servers:
  - url: http://localhost:3000
    description: Servidor de desenvolvimento

tags:
  - name: Usuários
    description: Operações relacionadas a usuários

components:
  schemas:
    User:
      type: object
      required:
        - name
        - email
      properties:
        id:
          type: string
          description: ID único do usuário
          example: "01"
        name:
          type: string
          description: Nome completo do usuário
          example: "João Silva"
        email:
          type: string
          format: email
          description: Email único do usuário
          example: "joao@email.com"
        createdAt:
          type: string
          description: Data de criação
          example: "16/06/2025, 20:30:15"
        updatedAt:
          type: string
          description: Data da última atualização
          example: "16/06/2025, 21:15:30"
    
    UserInput:
      type: object
      required:
        - name
        - email
      properties:
        name:
          type: string
          description: Nome completo do usuário
          example: "João Silva"
        email:
          type: string
          format: email
          description: Email único do usuário
          example: "joao@email.com"
    
    UserUpdate:
      type: object
      properties:
        name:
          type: string
          description: Nome completo do usuário
          example: "João Silva Atualizado"
        email:
          type: string
          format: email
          description: Email único do usuário
          example: "joao.novo@email.com"
    
    Error:
      type: object
      properties:
        error:
          type: string
          description: Mensagem de erro
          example: "Usuário não encontrado"

paths:
  /users:
    get:
      summary: Listar todos os usuários
      description: Retorna uma lista com todos os usuários cadastrados
      tags: [Usuários]
      responses:
        '200':
          description: Lista de usuários retornada com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    
    post:
      summary: Criar novo usuário
      description: Cria um novo usuário no sistema
      tags: [Usuários]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInput'
      responses:
        '201':
          description: Usuário criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Dados inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Email já está em uso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/{id}:
    get:
      summary: Buscar usuário por ID
      description: Retorna um usuário específico pelo seu ID
      tags: [Usuários]
      parameters:
        - in: path
          name: id
          required: true
          description: ID único do usuário
          schema:
            type: string
            example: "01"
      responses:
        '200':
          description: Usuário encontrado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Usuário não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    
    put:
      summary: Atualizar usuário
      description: Atualiza os dados de um usuário existente
      tags: [Usuários]
      parameters:
        - in: path
          name: id
          required: true
          description: ID único do usuário
          schema:
            type: string
            example: "01"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
      responses:
        '200':
          description: Usuário atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Dados inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Usuário não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Email já está em uso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    
    delete:
      summary: Deletar usuário por ID
      description: Remove um usuário do sistema pelo seu ID
      tags: [Usuários]
      parameters:
        - in: path
          name: id
          required: true
          description: ID único do usuário
          schema:
            type: string
            example: "01"
      responses:
        '200':
          description: Usuário deletado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Usuário não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'